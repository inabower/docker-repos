FROM ubuntu:18.04

ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update
# OpenFOAM Required
RUN apt-get install -y build-essential
RUN apt-get install -y flex bison cmake zlib1g-dev libboost-system-dev libboost-thread-dev libopenmpi-dev openmpi-bin gnuplot libreadline-dev libncurses-dev libxt-dev
# Parallel processing required
RUN apt-get install -y libscotch-dev libcgal-dev 
# GUI apps required
RUN apt-get install -y wget x11-apps
RUN apt-get install -y python python-dev python3 python3-dev python3-pip
RUN apt-get install -y freeglut3 freeglut3-dev mesa-utils
RUN apt-get install -y qt5-default qt5-qmake qttools5-dev qtbase5-dev qtdeclarative5-dev libqt5x11extras5-dev libqt5svg5-dev qtxmlpatterns5-dev-tools
# GetFEM required
RUN apt-get install -y libqd-dev libqhull-dev libmumps-seq-dev liblapack-dev libblas-dev
# Install CAD/CAE software from apt
RUN apt-get install -y git curl software-properties-common mesa-utils pkg-config libpciaccess-dev
RUN add-apt-repository ppa:freecad-maintainers/freecad-stable
RUN apt-get update
RUN apt-get install -y freecad gmsh vim byobu
# Install Python packages for jupyter
RUN pip3 install jupyterlab scipy numpy pandas matplotlib seaborn meson mako ninja

SHELL ["/bin/bash", "-c"]

# Install mesa 20.0.6
WORKDIR /opt/Mesa
RUN wget https://mesa.freedesktop.org/archive/mesa-20.0.6.tar.xz
RUN wget https://dri.freedesktop.org/libdrm/libdrm-2.4.101.tar.xz
RUN tar xf mesa-20.0.6.tar.xz && rm mesa-20.0.6.tar.xz
RUN tar xf libdrm-2.4.101.tar.xz && rm libdrm-2.4.101.tar.xz
WORKDIR /opt/Mesa/libdrm-2.4.101
RUN mkdir build
RUN meson /opt/Mesa/libdrm-2.4.101/build/
RUN ninja -C /opt/Mesa/libdrm-2.4.101/build/
RUN ninja -C /opt/Mesa/libdrm-2.4.101/build/ install
RUN sed -i~orig -e 's/# deb-src/deb-src/' /etc/apt/sources.list   
RUN apt-get update -y
RUN apt-get build-dep -y mesa
WORKDIR /opt/Mesa/mesa-20.0.6
RUN mkdir build
RUN meson /opt/Mesa/mesa-20.0.6/build/
RUN ninja -C /opt/Mesa/mesa-20.0.6/build/
RUN ninja -C /opt/Mesa/mesa-20.0.6/build/ install

# Install OpenFOAM and Third Party from source
WORKDIR /opt/OpenFOAM/
RUN wget -O - https://sourceforge.net/projects/openfoam/files/v1912/ThirdParty-v1912.tgz | tar zx
RUN wget -O - https://sourceforge.net/projects/openfoam/files/v1912/OpenFOAM-v1912.tgz | tar zx
RUN chmod -R 775 OpenFOAM-v1912 ThirdParty-v1912
# Install OpenFOAM-v1912 from source
WORKDIR /opt/OpenFOAM/OpenFOAM-v1912
RUN source /opt/OpenFOAM/OpenFOAM-v1912/etc/bashrc && ./Allwmake -j4
# Install ParaView from apt
RUN apt-get install -y paraview
WORKDIR /opt/OpenFOAM/ThirdParty-v1912/platforms/linux64Gcc/ParaView-v5.6.3
RUN ln -s /usr/bin/paraview ./ && ln -s /usr/bin/pv* ./

# Install julia-1.4.1 from binary
WORKDIR /opt/Julia
RUN wget -O - https://julialang-s3.julialang.org/bin/linux/x64/1.4/julia-1.4.1-linux-x86_64.tar.gz | tar zx
# [your docker img] echo 'alias julia="/home/Julia/julia-1.4.1/bin/julia"' >> ~/.bashrc

# Install SU2 from source
WORKDIR /opt/SU2
RUN git clone https://github.com/su2code/SU2.git
WORKDIR /opt/SU2/SU2
RUN python3 meson.py build
RUN ./ninja -C build install

# Install Elmer from apt
RUN apt-add-repository ppa:elmer-csc-ubuntu/elmer-csc-ppa && \
    apt-get update && \
    apt-get install -y elmerfem-csc-eg

# Install GetFEM 5.4 from source
WORKDIR /opt/GetFEM
RUN wget -O - http://download-mirror.savannah.gnu.org/releases/getfem/stable/getfem-5.4.tar.gz | tar zx
RUN apt-get install -y libqd-dev libqhull-dev libmumps-seq-dev liblapack-dev libblas-dev
WORKDIR /opt/GetFEM/getfem-5.4/
RUN ./configure --enable-python --enable-shared && make && make install

# Install OpenModelica
RUN for deb in deb deb-src; do echo "$deb http://build.openmodelica.org/apt `lsb_release -cs` release"; done | tee /etc/apt/sources.list.d/openmodelica.list
RUN wget -q http://build.openmodelica.org/apt/openmodelica.asc -O- | apt-key add - 
RUN apt-get update
RUN apt-get install -y openmodelica
RUN pip3 install -U git+git://github.com/OpenModelica/OMPython.git
RUN pip3 install -U git+git://github.com/OpenModelica/jupyter-openmodelica.git

# Reinstall ParaView
#WORKDIR /opt/OpenFOAM/ThirdParty-v1912
#RUN mv platforms/linux64Gcc/ParaView-v5.6.3 platforms/linux64Gcc/ParaView-v5.6.3.old
#RUN sed -i -e "s/bin\/sh/bin\/bash/" makeParaView
#RUN source /opt/OpenFOAM/OpenFOAM-v1912/etc/bashrc && ./makeParaView -python2 -python-lib /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0

# Install Salome-Meca 2019.03 from binary
#WORKDIR /opt/Salome-Meca
#RUN wget -O - https://www.code-aster.org/FICHIERS/salome_meca-2019.0.3-1-universal.tgz | tar zx
#RUN ./salome_meca-2019.0.3-1-universal.run -t /opt/Salome-Meca && rm ./salome_meca-2019.0.3-1-universal.run
# [your docker img] echo 'alias salome="/home/Salome-Meca/appli_V2019.0.3_universal/salome"' >> ~/.bashrc

# ---------------------- #
#   Local user setting   #
# ---------------------- #

# user name and password is "mycae"
ARG DOCKER_USER=mycae
ARG DOCKER_PASS=mycae
RUN useradd -m --uid 777 --groups root ${DOCKER_USER} && echo ${DOCKER_USER}:${DOCKER_PASS} | chpasswd
USER ${DOCKER_USER}
WORKDIR /home/${DOCKER_USER}

# Add Julia to Jupyter
RUN /opt/Julia/julia-1.4.1/bin/julia -e 'using Pkg; Pkg.add("IJulia"); using IJulia'

# Install Rust
RUN curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable -y
# Add Rust to Jupyter
RUN .cargo/bin/cargo install evcxr_jupyter && .cargo/bin/evcxr_jupyter --install

USER root
# Install Salome-Meca 2019.03 from binary
WORKDIR /opt/Salome-Meca
RUN wget -O - https://www.code-aster.org/FICHIERS/salome_meca-2019.0.3-1-universal.tgz | tar zx
RUN ./salome_meca-2019.0.3-1-universal.run -t /opt/Salome-Meca && rm ./salome_meca-2019.0.3-1-universal.run

# Install Salome-Meca 2019.03 from binary
WORKDIR /opt/Salome
RUN wget -O - https://files.salome-platform.org/Salome/Salome9.4.0/SALOME-9.4.0-UB18.04-SRC.tar.gz | tar zx

USER ${DOCKER_USER}
WORKDIR /home/${DOCKER_USER}
# Set bashrc
RUN echo 'export LD_LIBRARY_PATH="/opt/GetFEM/getfem-5.4/src/.libs/:${LD_LIBRARY_PATH}"' >> ~/.bashrc
RUN echo 'export PYTHONPATH="/opt/GetFEM/getfem-5.4/interface/src/python/:${PYTHONPATH}"' >> ~/.bashrc
RUN echo 'alias salome-meca="/opt/Salome-Meca/appli_V2019.0.3_universal/salome"' >> ~/.bashrc
RUN echo 'alias salome="/opt/Salome/SALOME-9.4.0-UB18.04-SRC/salome"' >> ~/.bashrc
RUN echo 'alias of1912="source /opt/OpenFOAM/OpenFOAM-v1912/etc/bashrc"' >> ~/.bashrc
RUN echo 'alias julia="/opt/Julia/julia-1.4.1/bin/julia"' >> ~/.bashrc
RUN echo 'export PATH="$HOME/.cargo/bin:$PATH"' >> ~/.bashrc
